// Code generated by ent, DO NOT EDIT.

package ent

import (
	"plms-backend/ent/class"
	"plms-backend/ent/class_lab_status"
	"plms-backend/ent/course"
	"plms-backend/ent/lab"
	"plms-backend/ent/lab_problem"
	"plms-backend/ent/lab_problem_submission"
	"plms-backend/ent/post"
	"plms-backend/ent/schema"
	"plms-backend/ent/testcase"
	"plms-backend/ent/testcase_submission"
	"plms-backend/ent/topic"
	"plms-backend/ent/topic_file_mats"
	"plms-backend/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	classFields := schema.Class{}.Fields()
	_ = classFields
	// classDescName is the schema descriptor for name field.
	classDescName := classFields[2].Descriptor()
	// class.NameValidator is a validator for the "name" field. It is called by the builders before save.
	class.NameValidator = classDescName.Validators[0].(func(string) error)
	// classDescCreatedAt is the schema descriptor for created_at field.
	classDescCreatedAt := classFields[8].Descriptor()
	// class.DefaultCreatedAt holds the default value on creation for the created_at field.
	class.DefaultCreatedAt = classDescCreatedAt.Default.(time.Time)
	// classDescUpdatedAt is the schema descriptor for updated_at field.
	classDescUpdatedAt := classFields[9].Descriptor()
	// class.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	class.DefaultUpdatedAt = classDescUpdatedAt.Default.(time.Time)
	class_lab_statusFields := schema.Class_Lab_Status{}.Fields()
	_ = class_lab_statusFields
	// class_lab_statusDescIsOpen is the schema descriptor for is_open field.
	class_lab_statusDescIsOpen := class_lab_statusFields[3].Descriptor()
	// class_lab_status.DefaultIsOpen holds the default value on creation for the is_open field.
	class_lab_status.DefaultIsOpen = class_lab_statusDescIsOpen.Default.(bool)
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescName is the schema descriptor for name field.
	courseDescName := courseFields[1].Descriptor()
	// course.NameValidator is a validator for the "name" field. It is called by the builders before save.
	course.NameValidator = courseDescName.Validators[0].(func(string) error)
	// courseDescCreatedAt is the schema descriptor for created_at field.
	courseDescCreatedAt := courseFields[3].Descriptor()
	// course.DefaultCreatedAt holds the default value on creation for the created_at field.
	course.DefaultCreatedAt = courseDescCreatedAt.Default.(time.Time)
	// courseDescUpdatedAt is the schema descriptor for updated_at field.
	courseDescUpdatedAt := courseFields[4].Descriptor()
	// course.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	course.DefaultUpdatedAt = courseDescUpdatedAt.Default.(time.Time)
	labFields := schema.Lab{}.Fields()
	_ = labFields
	// labDescName is the schema descriptor for name field.
	labDescName := labFields[1].Descriptor()
	// lab.NameValidator is a validator for the "name" field. It is called by the builders before save.
	lab.NameValidator = labDescName.Validators[0].(func(string) error)
	// labDescCreatedAt is the schema descriptor for created_at field.
	labDescCreatedAt := labFields[2].Descriptor()
	// lab.DefaultCreatedAt holds the default value on creation for the created_at field.
	lab.DefaultCreatedAt = labDescCreatedAt.Default.(time.Time)
	// labDescUpdatedAt is the schema descriptor for updated_at field.
	labDescUpdatedAt := labFields[3].Descriptor()
	// lab.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	lab.DefaultUpdatedAt = labDescUpdatedAt.Default.(time.Time)
	lab_problemFields := schema.Lab_Problem{}.Fields()
	_ = lab_problemFields
	// lab_problemDescName is the schema descriptor for name field.
	lab_problemDescName := lab_problemFields[1].Descriptor()
	// lab_problem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	lab_problem.NameValidator = lab_problemDescName.Validators[0].(func(string) error)
	// lab_problemDescPrompt is the schema descriptor for prompt field.
	lab_problemDescPrompt := lab_problemFields[2].Descriptor()
	// lab_problem.PromptValidator is a validator for the "prompt" field. It is called by the builders before save.
	lab_problem.PromptValidator = lab_problemDescPrompt.Validators[0].(func(string) error)
	// lab_problemDescFullScore is the schema descriptor for full_score field.
	lab_problemDescFullScore := lab_problemFields[3].Descriptor()
	// lab_problem.FullScoreValidator is a validator for the "full_score" field. It is called by the builders before save.
	lab_problem.FullScoreValidator = lab_problemDescFullScore.Validators[0].(func(float64) error)
	// lab_problemDescCreatedAt is the schema descriptor for created_at field.
	lab_problemDescCreatedAt := lab_problemFields[4].Descriptor()
	// lab_problem.DefaultCreatedAt holds the default value on creation for the created_at field.
	lab_problem.DefaultCreatedAt = lab_problemDescCreatedAt.Default.(time.Time)
	// lab_problemDescUpdatedAt is the schema descriptor for updated_at field.
	lab_problemDescUpdatedAt := lab_problemFields[5].Descriptor()
	// lab_problem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	lab_problem.DefaultUpdatedAt = lab_problemDescUpdatedAt.Default.(time.Time)
	lab_problem_submissionFields := schema.Lab_Problem_Submission{}.Fields()
	_ = lab_problem_submissionFields
	// lab_problem_submissionDescScore is the schema descriptor for score field.
	lab_problem_submissionDescScore := lab_problem_submissionFields[3].Descriptor()
	// lab_problem_submission.ScoreValidator is a validator for the "score" field. It is called by the builders before save.
	lab_problem_submission.ScoreValidator = lab_problem_submissionDescScore.Validators[0].(func(float64) error)
	// lab_problem_submissionDescInstructorScore is the schema descriptor for instructor_score field.
	lab_problem_submissionDescInstructorScore := lab_problem_submissionFields[5].Descriptor()
	// lab_problem_submission.InstructorScoreValidator is a validator for the "instructor_score" field. It is called by the builders before save.
	lab_problem_submission.InstructorScoreValidator = lab_problem_submissionDescInstructorScore.Validators[0].(func(float64) error)
	// lab_problem_submissionDescCreatedAt is the schema descriptor for created_at field.
	lab_problem_submissionDescCreatedAt := lab_problem_submissionFields[6].Descriptor()
	// lab_problem_submission.DefaultCreatedAt holds the default value on creation for the created_at field.
	lab_problem_submission.DefaultCreatedAt = lab_problem_submissionDescCreatedAt.Default.(time.Time)
	// lab_problem_submissionDescUpdatedAt is the schema descriptor for updated_at field.
	lab_problem_submissionDescUpdatedAt := lab_problem_submissionFields[7].Descriptor()
	// lab_problem_submission.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	lab_problem_submission.DefaultUpdatedAt = lab_problem_submissionDescUpdatedAt.Default.(time.Time)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescContent is the schema descriptor for content field.
	postDescContent := postFields[2].Descriptor()
	// post.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	post.ContentValidator = postDescContent.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[3].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[4].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(time.Time)
	testcaseFields := schema.Testcase{}.Fields()
	_ = testcaseFields
	// testcaseDescCreatedAt is the schema descriptor for created_at field.
	testcaseDescCreatedAt := testcaseFields[3].Descriptor()
	// testcase.DefaultCreatedAt holds the default value on creation for the created_at field.
	testcase.DefaultCreatedAt = testcaseDescCreatedAt.Default.(time.Time)
	// testcaseDescUpdatedAt is the schema descriptor for updated_at field.
	testcaseDescUpdatedAt := testcaseFields[4].Descriptor()
	// testcase.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testcase.DefaultUpdatedAt = testcaseDescUpdatedAt.Default.(time.Time)
	testcase_submissionFields := schema.Testcase_Submission{}.Fields()
	_ = testcase_submissionFields
	// testcase_submissionDescCreatedAt is the schema descriptor for created_at field.
	testcase_submissionDescCreatedAt := testcase_submissionFields[7].Descriptor()
	// testcase_submission.DefaultCreatedAt holds the default value on creation for the created_at field.
	testcase_submission.DefaultCreatedAt = testcase_submissionDescCreatedAt.Default.(time.Time)
	// testcase_submissionDescUpdatedAt is the schema descriptor for updated_at field.
	testcase_submissionDescUpdatedAt := testcase_submissionFields[8].Descriptor()
	// testcase_submission.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	testcase_submission.DefaultUpdatedAt = testcase_submissionDescUpdatedAt.Default.(time.Time)
	topicFields := schema.Topic{}.Fields()
	_ = topicFields
	// topicDescName is the schema descriptor for name field.
	topicDescName := topicFields[1].Descriptor()
	// topic.NameValidator is a validator for the "name" field. It is called by the builders before save.
	topic.NameValidator = topicDescName.Validators[0].(func(string) error)
	// topicDescCreatedAt is the schema descriptor for created_at field.
	topicDescCreatedAt := topicFields[3].Descriptor()
	// topic.DefaultCreatedAt holds the default value on creation for the created_at field.
	topic.DefaultCreatedAt = topicDescCreatedAt.Default.(time.Time)
	// topicDescUpdatedAt is the schema descriptor for updated_at field.
	topicDescUpdatedAt := topicFields[4].Descriptor()
	// topic.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	topic.DefaultUpdatedAt = topicDescUpdatedAt.Default.(time.Time)
	topic_file_matsFields := schema.Topic_File_Mats{}.Fields()
	_ = topic_file_matsFields
	// topic_file_matsDescName is the schema descriptor for name field.
	topic_file_matsDescName := topic_file_matsFields[1].Descriptor()
	// topic_file_mats.NameValidator is a validator for the "name" field. It is called by the builders before save.
	topic_file_mats.NameValidator = topic_file_matsDescName.Validators[0].(func(string) error)
	// topic_file_matsDescCreatedAt is the schema descriptor for created_at field.
	topic_file_matsDescCreatedAt := topic_file_matsFields[3].Descriptor()
	// topic_file_mats.DefaultCreatedAt holds the default value on creation for the created_at field.
	topic_file_mats.DefaultCreatedAt = topic_file_matsDescCreatedAt.Default.(time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = func() func(string) error {
		validators := userDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = func() func(string) error {
		validators := userDescPassword.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(password string) error {
			for _, fn := range fns {
				if err := fn(password); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[3].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[7].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(time.Time)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[8].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
}
